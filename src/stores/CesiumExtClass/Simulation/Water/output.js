const a0_0x597c59=a0_0x1baf;(function(_0x1c4f07,_0x42254b){const _0x1b727d=a0_0x1baf,_0x26e207=_0x1c4f07();while(!![]){try{const _0x5d65a4=-parseInt(_0x1b727d(0x18d))/0x1*(-parseInt(_0x1b727d(0x18c))/0x2)+parseInt(_0x1b727d(0x1ee))/0x3+-parseInt(_0x1b727d(0x1d1))/0x4+parseInt(_0x1b727d(0x187))/0x5*(parseInt(_0x1b727d(0x1e0))/0x6)+parseInt(_0x1b727d(0x192))/0x7*(parseInt(_0x1b727d(0x202))/0x8)+-parseInt(_0x1b727d(0x1bc))/0x9*(-parseInt(_0x1b727d(0x1a8))/0xa)+-parseInt(_0x1b727d(0x184))/0xb;if(_0x5d65a4===_0x42254b)break;else _0x26e207['push'](_0x26e207['shift']());}catch(_0x4d4333){_0x26e207['push'](_0x26e207['shift']());}}}(a0_0x410b,0x9c887));function a0_0x1baf(_0x18ef55,_0x5735a9){const _0x410b73=a0_0x410b();return a0_0x1baf=function(_0x1baf78,_0xadf397){_0x1baf78=_0x1baf78-0x17d;let _0x452f51=_0x410b73[_0x1baf78];return _0x452f51;},a0_0x1baf(_0x18ef55,_0x5735a9);}export const init=async _0x1a629e=>{const _0x5263f8=a0_0x1baf;_0x1a629e[_0x5263f8(0x1e8)][_0x5263f8(0x19c)]=0x4,_0x1a629e[_0x5263f8(0x1e8)][_0x5263f8(0x1c1)]=!![],_0x1a629e[_0x5263f8(0x1cd)][_0x5263f8(0x1eb)][_0x5263f8(0x1e3)]=!![],_0x1a629e[_0x5263f8(0x1e8)][_0x5263f8(0x189)]['depthTestAgainstTerrain']=!![],_0x1a629e[_0x5263f8(0x1e8)]['debugShowFramesPerSecond']=!![];const _0x44f09e=new FluidDemo(_0x1a629e,{});_0x1a629e[_0x5263f8(0x1b9)]['setView']({'destination':{'x':-2771064.6756677167,'y':4781829.550624459,'z':3179130.042667584},'orientation':{'heading':Cesium[_0x5263f8(0x1da)][_0x5263f8(0x1cc)](48.72529042457395),'pitch':Cesium[_0x5263f8(0x1da)][_0x5263f8(0x1cc)](-10.899276751527792),'roll':Cesium['Math'][_0x5263f8(0x1cc)](0.0014027234956804583)}});};const Command=a0_0x597c59(0x1c6),BufferA=a0_0x597c59(0x1a3),BufferB=a0_0x597c59(0x1f2),BufferC='\x0auniform\x20float\x20\x20\x20\x20\x20iTime;\x0auniform\x20int\x20\x20\x20\x20\x20iFrame;\x0auniform\x20vec2\x20iResolution;\x0auniform\x20sampler2D\x20iChannel0;\x0auniform\x20sampler2D\x20iChannel1;\x0avoid\x20main()\x0a{\x0a\x20\x20\x20\x20InitGrid(iResolution.xy);\x0a\x20\x20\x20\x20vec2\x20fragCoord\x20=\x20floor(gl_FragCoord.xy);\x0a\x20\x20\x20\x20vec3\x20pos\x20=\x20dim3from2(fragCoord);\x0a\x0a\x20\x20\x20\x20Particle\x20p0,\x20p1;\x0a\x20\x20\x20\x20\x0a\x20\x20\x20\x20//load\x20the\x20particles\x0a\x20\x20\x20\x20vec4\x20packed\x20=\x20LOAD3D(ch0,\x20pos);\x0a\x20\x20\x20\x20unpackParticles(packed,\x20pos,\x20p0,\x20p1);\x0a\x20\x20\x20\x20\x0a\x20\x20\x20\x20//load\x20density\x0a\x20\x20\x20\x20vec2\x20densities\x20=\x20LOAD3D(ch1,\x20pos).xy;\x0a\x20\x20\x20\x20p0.density\x20=\x20densities.x;\x0a\x20\x20\x20\x20p1.density\x20=\x20densities.y;\x0a\x20\x20\x20\x20\x0a\x20\x20\x20\x20if(p0.mass\x20+\x20p1.mass\x20>\x200u)\x20\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20range(i,\x20-2,\x202)\x20range(j,\x20-2,\x202)\x20range(k,\x20-2,\x202)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20if(i\x20==\x200\x20&&\x20j\x20==\x200\x20&&\x20k\x20==\x200)\x20continue;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vec3\x20pos1\x20=\x20pos\x20+\x20vec3(i,\x20j,\x20k);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20Particle\x20p0_,\x20p1_;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20unpackParticles(LOAD3D(ch0,\x20pos1),\x20pos1,\x20p0_,\x20p1_);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vec2\x20densities_\x20=\x20LOAD3D(ch1,\x20pos1).xy;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20p0_.density\x20=\x20densities_.x;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20p1_.density\x20=\x20densities_.y;\x0a\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20//apply\x20the\x20force\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20ApplyForce(p0,\x20p0_);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20ApplyForce(p0,\x20p1_);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20ApplyForce(p1,\x20p0_);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20ApplyForce(p1,\x20p1_);\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x0a\x20\x20\x20\x20\x20\x20\x20\x20ApplyForce(p0,\x20p1);\x0a\x20\x20\x20\x20\x20\x20\x20\x20ApplyForce(p1,\x20p0);\x0a\x0a\x20\x20\x20\x20\x20\x20\x20\x20IntegrateParticle(p0,\x20pos,\x20iResolution.xy,\x20iMouse,\x20iTime);\x0a\x20\x20\x20\x20\x20\x20\x20\x20IntegrateParticle(p1,\x20pos,\x20iResolution.xy,\x20iMouse,\x20iTime);\x0a\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x0a\x20\x20\x20\x20if(iFrame\x20<\x2010)\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20if(pos.x\x20<\x200.4*size3d.x\x20&&\x20pos.x\x20>\x200.0*size3d.x\x20&&\x20\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20pos.y\x20<\x200.85*size3d.y\x20&&\x20pos.y\x20>\x200.15*size3d.y\x20&&\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20pos.z\x20<\x200.85*size3d.z\x20&&\x20pos.z\x20>\x200.15*size3d.z)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20p0.mass\x20=\x20initial_particle_density;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20p1.mass\x20=\x200u;\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x0a\x20\x20\x20\x20\x20\x20\x20\x20p0.pos\x20=\x20pos;\x0a\x20\x20\x20\x20\x20\x20\x20\x20p0.vel\x20=\x20vec3(0.0);\x0a\x20\x20\x20\x20\x20\x20\x20\x20p1.pos\x20=\x20pos;\x0a\x20\x20\x20\x20\x20\x20\x20\x20p1.vel\x20=\x20vec3(0.0);\x0a\x20\x20\x20\x20}\x0a\x0a\x20\x20\x20\x20packed\x20=\x20packParticles(p0,\x20p1,\x20pos);\x0a\x20\x20\x20\x20out_FragColor\x20=\x20packed;\x0a}\x0a\x0a',BufferD=a0_0x597c59(0x18a),renderShaderSource=a0_0x597c59(0x1fa);class CustomPrimitive{constructor(_0x181359){const _0x537fa3=a0_0x597c59,_0x4e9e1f=_0x537fa3(0x203)[_0x537fa3(0x1e4)]('|');let _0x17f4ce=0x0;while(!![]){switch(_0x4e9e1f[_0x17f4ce++]){case'0':this['clearCommand']=undefined;continue;case'1':this[_0x537fa3(0x1ef)]=undefined;continue;case'2':this['commandType']=_0x181359[_0x537fa3(0x200)];continue;case'3':this['modelMatrix']=Cesium[_0x537fa3(0x1ad)](_0x181359[_0x537fa3(0x195)],Cesium[_0x537fa3(0x201)][_0x537fa3(0x17f)]);continue;case'4':this[_0x537fa3(0x19d)]&&(this[_0x537fa3(0x197)]=new Cesium[(_0x537fa3(0x1d0))]({'color':new Cesium[(_0x537fa3(0x18b))](0x0,0x0,0x0,0x0),'depth':0x1,'framebuffer':this[_0x537fa3(0x1ea)],'pass':Cesium['Pass']['OPAQUE']}));continue;case'5':this['preExecute']=_0x181359[_0x537fa3(0x1f0)];continue;case'6':this[_0x537fa3(0x1bf)]=!![];continue;case'7':this[_0x537fa3(0x1aa)]=_0x181359[_0x537fa3(0x1aa)];continue;case'8':this[_0x537fa3(0x1e7)]=_0x181359[_0x537fa3(0x1e7)];continue;case'9':this['autoClear']=Cesium[_0x537fa3(0x1ad)](_0x181359[_0x537fa3(0x19d)],![]);continue;case'10':this[_0x537fa3(0x1fb)]=_0x181359[_0x537fa3(0x1fb)];continue;case'11':this[_0x537fa3(0x1a0)]=_0x181359[_0x537fa3(0x1a0)];continue;case'12':this[_0x537fa3(0x1e6)]=_0x181359[_0x537fa3(0x1e6)];continue;case'13':this[_0x537fa3(0x1ea)]=_0x181359[_0x537fa3(0x1ea)];continue;case'14':this[_0x537fa3(0x1ce)]=_0x181359[_0x537fa3(0x1ce)];continue;case'15':this[_0x537fa3(0x1ec)]=_0x181359[_0x537fa3(0x1ec)];continue;case'16':this[_0x537fa3(0x1a5)]=_0x181359[_0x537fa3(0x1a5)];continue;}break;}}[a0_0x597c59(0x1f9)](_0x50c60c){const _0x57566a=a0_0x597c59,_0x5d0dce={'qDMTx':_0x57566a(0x1b5),'kKuBk':'Compute'};switch(this[_0x57566a(0x200)]){case _0x5d0dce['qDMTx']:{let _0x48e0e8=Cesium[_0x57566a(0x1d3)]['fromGeometry']({'context':_0x50c60c,'geometry':this[_0x57566a(0x1e7)],'attributeLocations':this[_0x57566a(0x1a5)],'bufferUsage':Cesium['BufferUsage'][_0x57566a(0x1d4)]}),_0x3e3771=Cesium[_0x57566a(0x1b0)][_0x57566a(0x205)]({'context':_0x50c60c,'attributeLocations':this['attributeLocations'],'vertexShaderSource':this['vertexShaderSource'],'fragmentShaderSource':this[_0x57566a(0x1a0)]}),_0x32a1e2=Cesium[_0x57566a(0x1c5)][_0x57566a(0x205)](this[_0x57566a(0x1aa)]);return new Cesium[(_0x57566a(0x1b2))]({'owner':this,'vertexArray':_0x48e0e8,'primitiveType':this[_0x57566a(0x1ec)],'uniformMap':this['uniformMap'],'modelMatrix':this[_0x57566a(0x195)],'shaderProgram':_0x3e3771,'framebuffer':this[_0x57566a(0x1ea)],'renderState':_0x32a1e2,'pass':Cesium['Pass'][_0x57566a(0x1c3)]});}case _0x5d0dce['kKuBk']:{return new Cesium[(_0x57566a(0x1a4))]({'owner':this,'fragmentShaderSource':this['fragmentShaderSource'],'uniformMap':this[_0x57566a(0x1e6)],'outputTexture':this[_0x57566a(0x1ce)],'persists':!![]});}}}[a0_0x597c59(0x1cb)](_0x4f0bd2,_0x27f54e){const _0x278179=a0_0x597c59;this[_0x278179(0x1e7)]=_0x27f54e;let _0x3622bf=Cesium[_0x278179(0x1d3)][_0x278179(0x180)]({'context':_0x4f0bd2,'geometry':this[_0x278179(0x1e7)],'attributeLocations':this['attributeLocations'],'bufferUsage':Cesium['BufferUsage'][_0x278179(0x1d4)]});this[_0x278179(0x1ef)]['vertexArray']=_0x3622bf;}[a0_0x597c59(0x1dd)](_0x5d1d75){const _0x30b3ae=a0_0x597c59;if(!this[_0x30b3ae(0x1bf)])return;!Cesium['defined'](this['commandToExecute'])&&(this['commandToExecute']=this[_0x30b3ae(0x1f9)](_0x5d1d75[_0x30b3ae(0x1df)])),Cesium[_0x30b3ae(0x1c9)](this[_0x30b3ae(0x1f0)])&&this['preExecute'](),Cesium[_0x30b3ae(0x1c9)](this['clearCommand'])&&_0x5d1d75[_0x30b3ae(0x19f)][_0x30b3ae(0x1be)](this[_0x30b3ae(0x197)]),_0x5d1d75['commandList'][_0x30b3ae(0x1be)](this['commandToExecute']);}['isDestroyed'](){return![];}[a0_0x597c59(0x1ca)](){const _0x5391c3=a0_0x597c59;return Cesium[_0x5391c3(0x1c9)](this[_0x5391c3(0x1ef)])&&(this[_0x5391c3(0x1ef)][_0x5391c3(0x1d2)]=this[_0x5391c3(0x1ef)]['shaderProgram']&&this[_0x5391c3(0x1ef)]['shaderProgram'][_0x5391c3(0x1ca)]()),Cesium[_0x5391c3(0x1a2)](this);}}class RenderUtil{constructor(){}static[a0_0x597c59(0x1ed)](_0x59a6ec){const _0x1dab98=a0_0x597c59;let _0x46c239=new XMLHttpRequest();return _0x46c239[_0x1dab98(0x1ab)]('GET',_0x59a6ec,![]),_0x46c239[_0x1dab98(0x1d9)](),_0x46c239[_0x1dab98(0x1c7)];}static[a0_0x597c59(0x1f6)](){const _0x5c38ab=a0_0x597c59;let _0x343578=new Cesium[(_0x5c38ab(0x1c4))]({'attributes':new Cesium[(_0x5c38ab(0x1fc))]({'position':new Cesium[(_0x5c38ab(0x17e))]({'componentDatatype':Cesium[_0x5c38ab(0x18e)][_0x5c38ab(0x196)],'componentsPerAttribute':0x3,'values':new Float32Array([-0x1,-0x1,0x0,0x1,-0x1,0x0,0x1,0x1,0x0,-0x1,0x1,0x0])}),'st':new Cesium[(_0x5c38ab(0x17e))]({'componentDatatype':Cesium[_0x5c38ab(0x18e)][_0x5c38ab(0x196)],'componentsPerAttribute':0x2,'values':new Float32Array([0x0,0x0,0x1,0x0,0x1,0x1,0x0,0x1])})}),'indices':new Uint32Array([0x3,0x2,0x0,0x0,0x2,0x1])});return _0x343578;}static[a0_0x597c59(0x1db)](_0x393386){const _0x5dc9fa=a0_0x597c59;if(Cesium[_0x5dc9fa(0x1c9)](_0x393386[_0x5dc9fa(0x182)])){let _0x12c69b={};_0x12c69b[_0x5dc9fa(0x182)]=_0x393386[_0x5dc9fa(0x182)],_0x393386[_0x5dc9fa(0x1a7)]=_0x12c69b;}let _0x2d5439=new Cesium[(_0x5dc9fa(0x1a6))](_0x393386);return _0x2d5439;}static[a0_0x597c59(0x1b6)](_0x293d8d,_0x2ccba6,_0x22920b){const _0x126ae3=a0_0x597c59;let _0x4c5091=new Cesium[(_0x126ae3(0x191))]({'context':_0x293d8d,'colorTextures':[_0x2ccba6],'depthTexture':_0x22920b});return _0x4c5091;}static['createRawRenderState'](_0x3f6d35){const _0x58f62d=a0_0x597c59;let _0x2f7feb=!![],_0x2faa84=![],_0x33d7cb={'viewport':_0x3f6d35[_0x58f62d(0x1f4)],'depthTest':_0x3f6d35[_0x58f62d(0x1b4)],'depthMask':_0x3f6d35['depthMask'],'blending':_0x3f6d35[_0x58f62d(0x1a1)]},_0x13c767=Cesium[_0x58f62d(0x1fe)]['getDefaultRenderState'](_0x2f7feb,_0x2faa84,_0x33d7cb);return _0x13c767;}}class FluidDemo{constructor(_0x7aeaf2){const _0x181e1a=a0_0x597c59;this[_0x181e1a(0x183)]=_0x7aeaf2,this['_width']=0x100,this[_0x181e1a(0x1b1)]=0x100,this['_resolution']=new Cesium[(_0x181e1a(0x1d6))](this[_0x181e1a(0x1ff)],this['_height']),this[_0x181e1a(0x19a)]();}[a0_0x597c59(0x19a)](){const _0x42dc83=a0_0x597c59,_0x537954={'EUKDu':function(_0x5d7c98,_0x1a1d13){return _0x5d7c98*_0x1a1d13;},'ZAZzb':function(_0x389e90,_0x5ab496){return _0x389e90*_0x5ab496;},'VlmgL':'Compute','RyIpI':function(_0x97cb9e,_0x5486ea){return _0x97cb9e+_0x5486ea;},'bCsox':_0x42dc83(0x1c0),'hcoZn':function(_0x4be267,_0x1c23d9){return _0x4be267==_0x1c23d9;},'hoIVC':function(_0x134831,_0x148c36){return _0x134831+_0x148c36;},'lphZW':_0x42dc83(0x1c8),'GEknl':function(_0x923f7b,_0x26a628,_0x100570,_0x3372f3){return _0x923f7b(_0x26a628,_0x100570,_0x3372f3);},'bNtyc':_0x42dc83(0x1b5),'qDCnA':function(_0x56a177,_0x1c9565){return _0x56a177+_0x1c9565;}},_0x1fdd8e=RenderUtil[_0x42dc83(0x1db)]({'context':this['_viewer'][_0x42dc83(0x1e8)][_0x42dc83(0x1df)],'width':this[_0x42dc83(0x1ff)],'height':this['_height'],'pixelFormat':Cesium[_0x42dc83(0x19e)]['RGBA'],'pixelDatatype':Cesium['PixelDatatype'][_0x42dc83(0x196)],'arrayBufferView':new Float32Array(_0x537954[_0x42dc83(0x1ba)](_0x537954['EUKDu'](this[_0x42dc83(0x1ff)],this[_0x42dc83(0x1b1)]),0x4))}),_0x2e8a98=RenderUtil[_0x42dc83(0x1db)]({'context':this[_0x42dc83(0x183)][_0x42dc83(0x1e8)][_0x42dc83(0x1df)],'width':this['_width'],'height':this[_0x42dc83(0x1b1)],'pixelFormat':Cesium[_0x42dc83(0x19e)][_0x42dc83(0x1ae)],'pixelDatatype':Cesium[_0x42dc83(0x1d5)][_0x42dc83(0x196)],'arrayBufferView':new Float32Array(_0x537954[_0x42dc83(0x1ba)](_0x537954['EUKDu'](this[_0x42dc83(0x1ff)],this[_0x42dc83(0x1b1)]),0x4))}),_0x2e9f0b=RenderUtil[_0x42dc83(0x1db)]({'context':this[_0x42dc83(0x183)][_0x42dc83(0x1e8)]['context'],'width':this['_width'],'height':this['_height'],'pixelFormat':Cesium['PixelFormat'][_0x42dc83(0x1ae)],'pixelDatatype':Cesium[_0x42dc83(0x1d5)]['FLOAT'],'arrayBufferView':new Float32Array(_0x537954[_0x42dc83(0x1ba)](_0x537954[_0x42dc83(0x1ba)](this[_0x42dc83(0x1ff)],this[_0x42dc83(0x1b1)]),0x4))}),_0x2cbe90=RenderUtil['createTexture']({'context':this[_0x42dc83(0x183)]['scene'][_0x42dc83(0x1df)],'width':this[_0x42dc83(0x1ff)],'height':this[_0x42dc83(0x1b1)],'pixelFormat':Cesium['PixelFormat']['RGBA'],'pixelDatatype':Cesium[_0x42dc83(0x1d5)][_0x42dc83(0x196)],'arrayBufferView':new Float32Array(_0x537954[_0x42dc83(0x1ba)](_0x537954[_0x42dc83(0x1f3)](this['_width'],this[_0x42dc83(0x1b1)]),0x4))}),_0xec86ab=RenderUtil['getFullscreenQuad'](),_0x1a09d9=new CustomPrimitive({'commandType':_0x537954[_0x42dc83(0x1f8)],'uniformMap':{'iTime':()=>{return _0x448725;},'iFrame':()=>{return _0x4d92b6;},'iResolution':()=>{const _0xad50fe=_0x42dc83;return this[_0xad50fe(0x199)];},'iChannel0':()=>{return _0x2e9f0b;}},'fragmentShaderSource':new Cesium[(_0x42dc83(0x188))]({'sources':[Command,BufferA]}),'geometry':_0xec86ab,'outputTexture':_0x1fdd8e,'preExecute':function(){_0x1a09d9['commandToExecute']['outputTexture']=_0x1fdd8e;}}),_0x41a704=new CustomPrimitive({'commandType':_0x537954[_0x42dc83(0x1f8)],'uniformMap':{'iTime':()=>{return _0x448725;},'iFrame':()=>{return _0x4d92b6;},'iResolution':()=>{const _0x18ba31=_0x42dc83;return this[_0x18ba31(0x199)];},'iChannel0':()=>{return _0x1fdd8e;}},'fragmentShaderSource':new Cesium[(_0x42dc83(0x188))]({'sources':[Command,BufferB]}),'geometry':_0xec86ab,'outputTexture':_0x2e8a98,'preExecute':function(){const _0x2a3698=_0x42dc83;_0x41a704[_0x2a3698(0x1ef)][_0x2a3698(0x1ce)]=_0x2e8a98;}}),_0x531532=new CustomPrimitive({'commandType':_0x537954[_0x42dc83(0x1f8)],'uniformMap':{'iTime':()=>{return _0x448725;},'iFrame':()=>{return _0x4d92b6;},'iResolution':()=>{const _0x34a0b2=_0x42dc83;return this[_0x34a0b2(0x199)];},'iChannel0':()=>{return _0x1fdd8e;},'iChannel1':()=>{return _0x2e8a98;}},'fragmentShaderSource':new Cesium[(_0x42dc83(0x188))]({'sources':[Command,BufferC]}),'geometry':_0xec86ab,'outputTexture':_0x2e9f0b,'preExecute':function(){const _0x24022e=_0x42dc83;_0x531532[_0x24022e(0x1ef)][_0x24022e(0x1ce)]=_0x2e9f0b;}}),_0xdaf8da=new CustomPrimitive({'commandType':_0x537954[_0x42dc83(0x1f8)],'uniformMap':{'iTime':()=>{return _0x448725;},'iFrame':()=>{return _0x4d92b6;},'iResolution':()=>{const _0x2e19fe=_0x42dc83;return this[_0x2e19fe(0x199)];},'iChannel1':()=>{return _0x2e8a98;}},'fragmentShaderSource':new Cesium[(_0x42dc83(0x188))]({'sources':[Command,BufferD]}),'geometry':_0xec86ab,'outputTexture':_0x2cbe90,'preExecute':function(){const _0x2f756c=_0x42dc83;_0xdaf8da[_0x2f756c(0x1ef)][_0x2f756c(0x1ce)]=_0x2cbe90;}}),_0x195adc=[];for(let _0x1189fd=0x0;_0x1189fd<0x6;_0x1189fd++){_0x195adc[_0x42dc83(0x1be)](Cesium[_0x42dc83(0x1f1)]['fetchImage']({'url':_0x537954[_0x42dc83(0x1e9)](_0x537954[_0x42dc83(0x1c2)]+(_0x537954['hcoZn'](_0x1189fd,0x0)?'':_0x537954[_0x42dc83(0x193)]('_',_0x1189fd)),_0x537954['lphZW'])}));}const _0x59bc92=this;Promise[_0x42dc83(0x1b7)](_0x195adc)[_0x42dc83(0x17d)](_0x4082a6=>{const _0x48acb2=_0x42dc83;debugger;_0x59bc92[_0x48acb2(0x1a9)]=new Cesium[(_0x48acb2(0x1dc))]({'context':_0x59bc92[_0x48acb2(0x183)][_0x48acb2(0x1e8)]['context'],'source':{'positiveX':_0x4082a6[0x0],'negativeX':_0x4082a6[0x1],'positiveY':_0x4082a6[0x2],'negativeY':_0x4082a6[0x3],'positiveZ':_0x4082a6[0x4],'negativeZ':_0x4082a6[0x5]}});}),this['cubeMap']=this[_0x42dc83(0x183)]['scene'][_0x42dc83(0x1df)][_0x42dc83(0x1b3)];const _0x1be2ec=_0x537954[_0x42dc83(0x1fd)](generateModelMatrix,[120.20998865783179,30.13650797533829,0x12c],[0x5a,0x0,0x0],[0x7d0,0x258,0x6a4]),_0x277905=Cesium[_0x42dc83(0x1bd)][_0x42dc83(0x1cf)]({'vertexFormat':Cesium['VertexFormat'][_0x42dc83(0x1b8)],'dimensions':new Cesium['Cartesian3'](0x1,0x1,0x1)}),_0x539edc=Cesium[_0x42dc83(0x1bd)][_0x42dc83(0x1e2)](_0x277905),_0x5bf889=Cesium[_0x42dc83(0x190)]['createAttributeLocations'](_0x539edc),_0x5a9ddc=new CustomPrimitive({'commandType':_0x537954[_0x42dc83(0x181)],'uniformMap':{'iTime':()=>{return _0x448725;},'iFrame':()=>{return _0x4d92b6;},'iResolution':()=>{const _0x472a80=_0x42dc83;return this[_0x472a80(0x199)];},'iChannel0':()=>{return _0x1fdd8e;},'iChannel1':()=>{return _0x2e8a98;},'iChannel2':()=>{return _0x2cbe90;},'iChannel3':()=>{const _0x31a69e=_0x42dc83;return this[_0x31a69e(0x1a9)]??this[_0x31a69e(0x183)][_0x31a69e(0x1e8)][_0x31a69e(0x1df)][_0x31a69e(0x1b3)];}},'geometry':_0x539edc,'modelMatrix':_0x1be2ec,'attributeLocations':_0x5bf889,'vertexShaderSource':new Cesium[(_0x42dc83(0x188))]({'sources':['\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20in\x20vec3\x20position;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20in\x20vec2\x20st;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20out\x20vec3\x20vo;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20out\x20vec3\x20vd;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20out\x20vec2\x20v_st;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20void\x20main()\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20{\x20\x20\x20\x20\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vo\x20=\x20czm_encodedCameraPositionMCHigh\x20+\x20czm_encodedCameraPositionMCLow;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vd\x20=\x20position\x20-\x20vo;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20v_st\x20=\x20st;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20gl_Position\x20=\x20czm_modelViewProjection\x20*\x20vec4(position,1.0);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20']}),'fragmentShaderSource':new Cesium[(_0x42dc83(0x188))]({'sources':[_0x537954[_0x42dc83(0x1ac)](Command,renderShaderSource)]})});let _0x448725=0x1,_0x4d92b6=0x0;this['_viewer'][_0x42dc83(0x1e8)][_0x42dc83(0x18f)][_0x42dc83(0x198)](()=>{const _0x50e2a7=_0x42dc83,_0x1e3655=performance[_0x50e2a7(0x1f5)]();_0x448725=_0x1e3655/0x3e8,_0x4d92b6+=0.02;}),this[_0x42dc83(0x183)]['scene'][_0x42dc83(0x1e5)][_0x42dc83(0x1de)](_0x1a09d9),this[_0x42dc83(0x183)][_0x42dc83(0x1e8)][_0x42dc83(0x1e5)][_0x42dc83(0x1de)](_0x41a704),this[_0x42dc83(0x183)][_0x42dc83(0x1e8)]['primitives']['add'](_0x531532),this[_0x42dc83(0x183)][_0x42dc83(0x1e8)]['primitives'][_0x42dc83(0x1de)](_0xdaf8da),this[_0x42dc83(0x183)][_0x42dc83(0x1e8)][_0x42dc83(0x1e5)]['add'](_0x5a9ddc);}}const generateModelMatrix=(_0x981cb=[0x0,0x0,0x0],_0x5943fc=[0x0,0x0,0x0],_0x360abc=[0x1,0x1,0x1])=>{const _0x482ff3=a0_0x597c59,_0x399622={'TpbPe':function(_0x2d172b,_0x400386){return _0x2d172b instanceof _0x400386;}},_0x10f591=Cesium[_0x482ff3(0x201)][_0x482ff3(0x194)](Cesium[_0x482ff3(0x1af)]['fromRotationX'](Cesium[_0x482ff3(0x1da)][_0x482ff3(0x1cc)](_0x5943fc[0x0]))),_0x4be06d=Cesium['Matrix4'][_0x482ff3(0x194)](Cesium[_0x482ff3(0x1af)][_0x482ff3(0x185)](Cesium[_0x482ff3(0x1da)][_0x482ff3(0x1cc)](_0x5943fc[0x1]))),_0x3d7cf4=Cesium[_0x482ff3(0x201)][_0x482ff3(0x194)](Cesium[_0x482ff3(0x1af)][_0x482ff3(0x19b)](Cesium[_0x482ff3(0x1da)][_0x482ff3(0x1cc)](_0x5943fc[0x2])));!_0x399622[_0x482ff3(0x204)](_0x981cb,Cesium[_0x482ff3(0x186)])&&(_0x981cb=Cesium['Cartesian3'][_0x482ff3(0x1bb)](..._0x981cb));const _0x4d2dc9=Cesium['Transforms'][_0x482ff3(0x1d8)](_0x981cb);Cesium['Matrix4'][_0x482ff3(0x1e1)](_0x4d2dc9,_0x10f591,_0x4d2dc9),Cesium[_0x482ff3(0x201)][_0x482ff3(0x1e1)](_0x4d2dc9,_0x4be06d,_0x4d2dc9),Cesium[_0x482ff3(0x201)][_0x482ff3(0x1e1)](_0x4d2dc9,_0x3d7cf4,_0x4d2dc9);const _0x3f0300=Cesium['Matrix4'][_0x482ff3(0x1d7)](new Cesium['Cartesian3'](..._0x360abc)),_0x5821a4=Cesium[_0x482ff3(0x201)][_0x482ff3(0x1e1)](_0x4d2dc9,_0x3f0300,new Cesium[(_0x482ff3(0x201))]());return _0x5821a4;},main=async()=>{const _0x1d9bda={'hThxn':function(_0x39f2f2){return _0x39f2f2();}};await _0x1d9bda['hThxn'](initViewer);};window[a0_0x597c59(0x1f7)]=main;function a0_0x410b(){const _0x4e013a=['ComponentDatatype','postRender','GeometryPipeline','Framebuffer','2224481zqkjxh','hoIVC','fromRotationTranslation','modelMatrix','FLOAT','clearCommand','addEventListener','_resolution','initShaderToy','fromRotationZ','msaaSamples','autoClear','PixelFormat','commandList','fragmentShaderSource','blending','destroyObject','\x0auniform\x20float\x20\x20\x20\x20\x20iTime;\x0auniform\x20int\x20\x20\x20\x20\x20iFrame;\x0auniform\x20vec2\x20iResolution;\x0auniform\x20sampler2D\x20iChannel0;\x0avoid\x20main()\x0a{\x0a\x20\x20\x20\x20InitGrid(iResolution.xy);\x0a\x20\x20\x20\x20vec2\x20fragCoord\x20=\x20floor(gl_FragCoord.xy);\x0a\x20\x20\x20\x20vec3\x20pos\x20=\x20dim3from2(fragCoord);\x0a\x20\x20\x20\x20\x0a\x20\x20\x20\x20Particle\x20p0,\x20p1;\x0a\x20\x20\x20\x20p0.mass\x20=\x200u;\x0a\x20\x20\x20\x20p0.pos\x20=\x20vec3(0);\x0a\x20\x20\x20\x20p0.vel\x20=\x20vec3(0);\x0a\x0a\x20\x20\x20\x20p1.mass\x20=\x200u;\x0a\x20\x20\x20\x20p1.pos\x20=\x20vec3(0);\x0a\x20\x20\x20\x20p1.vel\x20=\x20vec3(0);\x0a\x0a\x20\x20\x20\x20//advect\x20neighbors\x20and\x20accumulate\x20+\x20clusterize\x20density\x20if\x20they\x20fall\x20into\x20this\x20cell\x0a\x20\x20\x20\x20range(i,\x20-2,\x202)\x20range(j,\x20-2,\x202)\x20range(k,\x20-2,\x202)\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20//load\x20the\x20particles\x20\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec3\x20pos1\x20=\x20pos\x20+\x20vec3(i,\x20j,\x20k);\x0a\x20\x20\x20\x20\x20\x20\x20\x20if(!all(lessThanEqual(pos1,\x20size3d))\x20||\x20!all(greaterThanEqual(pos1,\x20vec3(0.0))))\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20continue;\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20Particle\x20p0_,\x20p1_;\x0a\x20\x20\x20\x20\x20\x20\x20\x20unpackParticles(LOAD3D(ch0,\x20pos1),\x20pos1,\x20p0_,\x20p1_);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x0a\x20\x20\x20\x20\x20\x20\x20\x20if(p0_.mass\x20>\x200u)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20p0_.pos\x20+=\x20p0_.vel*dt;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20Clusterize(p0,\x20p1,\x20p0_,\x20pos);\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x0a\x20\x20\x20\x20\x20\x20\x20\x20if(p1_.mass\x20>\x200u)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20p1_.pos\x20+=\x20p1_.vel*dt;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20Clusterize(p0,\x20p1,\x20p1_,\x20pos);\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x0a\x20\x20\x20\x20if(p1.mass\x20==\x200u\x20&&\x20p0.mass\x20>\x200u)\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20SplitParticle(p0,\x20p1);\x0a\x20\x20\x20\x20}\x0a\x0a\x20\x20\x20\x20if(p0.mass\x20==\x200u\x20&&\x20p1.mass\x20>\x200u)\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20SplitParticle(p1,\x20p0);\x0a\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x0a\x20\x20\x20\x20vec4\x20packed\x20=\x20packParticles(p0,\x20p1,\x20pos);\x0a\x20\x20\x20\x20out_FragColor\x20=\x20packed;\x0a}\x0a','ComputeCommand','attributeLocations','Texture','source','753280BHTIST','cubeMap','rawRenderState','open','qDCnA','defaultValue','RGBA','Matrix3','ShaderProgram','_height','DrawCommand','_defaultCubeMap','depthTest','Draw','createFramebuffer','all','POSITION_AND_ST','camera','EUKDu','fromDegrees','99BQbIlC','BoxGeometry','push','show','SimulateData/image/488bd40303a2e2b9a71987e48c66ef41f5e937174bf316d3ed0e86410784b919','highDynamicRange','bCsox','OPAQUE','Geometry','RenderState','\x0a#define\x20ch0\x20iChannel0\x0a#define\x20ch1\x20iChannel1\x0a#define\x20ch2\x20iChannel2\x0a#define\x20ch3\x20iChannel3\x0a\x0a#define\x20LOAD(ch,\x20pos)\x20texelFetch(ch,\x20ivec2(pos),\x200)\x0a#define\x20LOAD3D(ch,\x20pos)\x20texelFetch(ch,\x20ivec2(dim2from3(pos)),\x200)\x0a\x0a#define\x20PI\x203.1415926535\x0a#define\x20TWO_PI\x206.28318530718\x0a\x0a#define\x20light_dir\x20normalize(vec3(0.820,1.000,0.702))\x0a\x0a#define\x20surface_tension\x200.5\x0a#define\x20surface_tension_rad\x202.0\x0a#define\x20initial_particle_density\x202u\x0a#define\x20dt\x200.7\x0a#define\x20rest_density\x201.0\x0a#define\x20gravity\x200.01\x0a#define\x20force_k\x200.15\x0a#define\x20force_coef_a\x20-4.0\x0a#define\x20force_coef_b\x200.0\x0a#define\x20force_mouse\x200.005\x0a#define\x20force_mouse_rad\x2040.0\x0a#define\x20force_boundary\x205.0\x0a#define\x20boundary_h\x205.0\x0a#define\x20max_velocity\x202.0\x0a#define\x20cooling\x200.0\x0a\x0a#define\x20R\x20iResolution.xy\x0a\x0a#define\x20GD(x,\x20R)\x20exp(-dot(x/R,x/R))/(R*R)\x0a#define\x20GS(x)\x20exp(-dot(x,x))\x0a\x0a#define\x20loop(i,x)\x20for(int\x20i\x20=\x200;\x20i\x20<\x20x;\x20i++)\x0a#define\x20range(i,a,b)\x20for(int\x20i\x20=\x20a;\x20i\x20<=\x20b;\x20i++)\x0a\x0a//3d\x20slice\x20aspect\x20ratio\x20\x0a#define\x20ar\x20vec2(0.5,0.5)\x0avec2\x20SCALE;\x0avec3\x20size3d;\x0a\x0avec4\x20iMouse\x20=\x20vec4(0.);\x0a\x0avec2\x20dim2from3(vec3\x20p3d)\x0a{\x0a\x20\x20\x20\x20p3d\x20=\x20clamp(p3d,\x20vec3(0.0),\x20size3d);\x0a\x20\x20\x20\x20float\x20ny\x20=\x20floor(p3d.z/SCALE.x);\x0a\x20\x20\x20\x20float\x20nx\x20=\x20floor(p3d.z)\x20-\x20ny*SCALE.x;\x0a\x20\x20\x20\x20return\x20vec2(nx,\x20ny)*vec2(size3d.xy)\x20+\x20p3d.xy;\x0a}\x0a\x0avec3\x20dim3from2(vec2\x20p2d)\x0a{\x0a\x20\x20\x20\x20return\x20vec3(p2d\x20-\x20size3d.xy*floor(p2d/size3d.xy),(floor(p2d.x/size3d.x)\x20+\x20SCALE.x*floor(p2d.y/size3d.y)));\x0a}\x0a\x0a\x0a#define\x20pixel(a,\x20p,\x20s)\x20texture(a,\x20p/vec2(s))\x0avec4\x20voxel(sampler2D\x20ch,\x20vec3\x20p3d)\x0a{\x0a\x20\x20\x20\x20return\x20pixel(ch,\x20dim2from3(p3d),\x20textureSize(ch,\x200));\x0a}\x0a\x0a//trilinear\x20interpolation\x20=\x20linear\x20interp\x20between\x20layers\x0avec4\x20trilinear(sampler2D\x20ch,\x20vec3\x20p3d)\x0a{\x0a\x20\x20\x20\x20return\x20mix(voxel(ch,\x20vec3(p3d.xy,\x20floor(p3d.z))),voxel(ch,\x20vec3(p3d.xy,\x20ceil(p3d.z))),\x20fract(p3d.z));\x0a}\x0a\x0a\x0afloat\x20sdBox(\x20vec3\x20p,\x20vec3\x20b\x20)\x0a{\x0a\x20\x20\x20\x20vec3\x20d\x20=\x20abs(p)\x20-\x20b;\x0a\x20\x20\x20\x20return\x20min(max(d.x,max(d.y,d.z)),0.0)\x20+\x20length(max(d,0.0));\x0a}\x0a\x0avec2\x20hash21(float\x20p)\x0a{\x0a\x09vec3\x20p3\x20=\x20fract(vec3(p)\x20*\x20vec3(.1031,\x20.1030,\x20.0973));\x0a\x09p3\x20+=\x20dot(p3,\x20p3.yzx\x20+\x2033.33);\x0a\x20\x20\x20\x20return\x20fract((p3.xx+p3.yz)*p3.zy);\x0a}\x0a\x0avec2\x20hash23(vec3\x20p3)\x0a{\x0a\x09p3\x20=\x20fract(p3\x20*\x20vec3(.1031,\x20.1030,\x20.0973));\x0a\x20\x20\x20\x20p3\x20+=\x20dot(p3,\x20p3.yzx+33.33);\x0a\x20\x20\x20\x20return\x20fract((p3.xx+p3.yz)*p3.zy);\x0a}\x0a\x0avec3\x20udir(vec2\x20rng)\x0a{\x0a\x20\x20\x20\x20float\x20phi\x20=\x202.*PI*rng.x;\x0a\x20\x20\x20\x20float\x20ctheta\x20=\x202.*rng.y-1.;\x0a\x20\x20\x20\x20float\x20stheta\x20=\x20sqrt(1.0-ctheta*ctheta);\x0a\x20\x20\x20\x20return\x20vec3(cos(phi)*stheta,\x20sin(phi)*stheta,\x20ctheta);\x0a}\x0a\x0astruct\x20Particle\x20\x0a{\x0a\x20\x20\x20\x20uint\x20mass;\x0a\x20\x20\x20\x20vec3\x20pos;\x0a\x20\x20\x20\x20vec3\x20vel;\x0a\x20\x20\x20\x20vec3\x20force;\x0a\x20\x20\x20\x20float\x20density;\x0a};\x0a\x0a//5\x20bits\x20for\x20shared\x20exponent,\x209\x20bits\x20for\x20each\x20component\x0auint\x20packvec3(vec3\x20v)\x0a{\x0a\x20\x20\x20\x20//get\x20the\x20exponent\x0a\x20\x20\x20\x20float\x20maxv\x20=\x20max(abs(v.x),\x20max(abs(v.y),\x20abs(v.z)));\x0a\x20\x20\x20\x20int\x20exp\x20=\x20clamp(int(ceil(log2(maxv))),\x20-15,\x2015);\x0a\x20\x20\x20\x20float\x20scale\x20=\x20exp2(-float(exp));\x0a\x20\x20\x20\x20uvec3\x20sv\x20=\x20uvec3(round(clamp(v*scale,\x20-1.0,\x201.0)\x20*\x20255.0)\x20+\x20255.0);\x0a\x20\x20\x20\x20uint\x20packed\x20=\x20uint(exp\x20+\x2015)\x20|\x20(sv.x\x20<<\x205)\x20|\x20(sv.y\x20<<\x2014)\x20|\x20(sv.z\x20<<\x2023);\x0a\x20\x20\x20\x20return\x20packed;\x0a}\x0a\x0avec3\x20unpackvec3(uint\x20packed)\x0a{\x0a\x20\x20\x20\x20int\x20exp\x20=\x20int(packed\x20&\x200x1Fu)\x20-\x2015;\x0a\x20\x20\x20\x20vec3\x20sv\x20=\x20vec3((packed\x20>>\x205)\x20&\x200x1FFu,\x20(packed\x20>>\x2014)\x20&\x200x1FFu,\x20(packed\x20>>\x2023)\x20&\x200x1FFu);\x0a\x20\x20\x20\x20vec3\x20v\x20=\x20(sv\x20-\x20255.0)\x20/\x20255.0;\x0a\x20\x20\x20\x20v\x20*=\x20exp2(float(exp));\x0a\x20\x20\x20\x20return\x20v;\x0a}\x0a\x0avec4\x20packParticles(Particle\x20p0,\x20Particle\x20p1,\x20vec3\x20pos)\x0a{\x0a\x20\x20\x20\x20p0.pos\x20-=\x20pos;\x0a\x20\x20\x20\x20p1.pos\x20-=\x20pos;\x0a\x0a\x20\x20\x20\x20uvec3\x20pos0\x20=\x20uvec3(clamp(p0.pos,\x200.0,\x201.0)\x20*\x20255.0);\x20//\x20Assuming\x20pos\x20range\x20[0,\x201]\x20in\x20a\x20cell\x0a\x20\x20\x20\x20uvec3\x20pos1\x20=\x20uvec3(clamp(p1.pos,\x200.0,\x201.0)\x20*\x20255.0);\x0a\x0a\x20\x20\x20\x20uint\x20data1\x20=\x20p0.mass\x20|\x20(p1.mass\x20<<\x208)\x20|\x20(pos0.x\x20<<\x2016)\x20|\x20(pos0.y\x20<<\x2024);\x0a\x20\x20\x20\x20float\x20f1\x20=\x20uintBitsToFloat(data1);\x0a\x20\x20\x20\x20uint\x20data2\x20=\x20pos0.z\x20|\x20(pos1.x\x20<<\x208)\x20|\x20(pos1.y\x20<<\x2016)\x20|\x20(pos1.z\x20<<\x2024);\x0a\x20\x20\x20\x20float\x20f2\x20=\x20uintBitsToFloat(data2);\x0a\x20\x20\x20\x20uint\x20data3\x20=\x20packvec3(p0.vel);\x0a\x20\x20\x20\x20float\x20f3\x20=\x20uintBitsToFloat(data3);\x0a\x20\x20\x20\x20uint\x20data4\x20=\x20packvec3(p1.vel);\x0a\x20\x20\x20\x20float\x20f4\x20=\x20uintBitsToFloat(data4);\x0a\x20\x20\x20\x20return\x20vec4(f1,f2,f3,f4);\x0a}\x0a\x0avoid\x20unpackParticles(vec4\x20packed,\x20vec3\x20pos,\x20out\x20Particle\x20p0,\x20out\x20Particle\x20p1)\x0a{\x0a\x20\x20\x20\x20uint\x20data1\x20=\x20floatBitsToUint(packed.x);\x0a\x20\x20\x20\x20uint\x20data2\x20=\x20floatBitsToUint(packed.y);\x0a\x20\x20\x20\x20uint\x20data3\x20=\x20floatBitsToUint(packed.z);\x0a\x20\x20\x20\x20uint\x20data4\x20=\x20floatBitsToUint(packed.w);\x0a\x0a\x20\x20\x20\x20p0.mass\x20=\x20data1\x20&\x200xFFu;\x0a\x20\x20\x20\x20p1.mass\x20=\x20(data1\x20>>\x208)\x20&\x200xFFu;\x0a\x0a\x20\x20\x20\x20uvec3\x20pos0\x20=\x20uvec3((data1\x20>>\x2016)\x20&\x200xFFu,\x20(data1\x20>>\x2024)\x20&\x200xFFu,\x20data2\x20&\x200xFFu);\x0a\x20\x20\x20\x20uvec3\x20pos1\x20=\x20uvec3((data2\x20>>\x208)\x20&\x200xFFu,\x20(data2\x20>>\x2016)\x20&\x200xFFu,\x20(data2\x20>>\x2024)\x20&\x200xFFu);\x0a\x0a\x20\x20\x20\x20p0.pos\x20=\x20vec3(pos0)\x20/\x20255.0\x20+\x20pos;\x0a\x20\x20\x20\x20p1.pos\x20=\x20vec3(pos1)\x20/\x20255.0\x20+\x20pos;\x0a\x0a\x20\x20\x20\x20p0.vel\x20=\x20unpackvec3(data3);\x0a\x20\x20\x20\x20p1.vel\x20=\x20unpackvec3(data4);\x0a}\x0a\x0afloat\x20sdBox(\x20in\x20vec2\x20p,\x20in\x20vec2\x20b\x20)\x0a{\x0a\x20\x20\x20\x20vec2\x20d\x20=\x20abs(p)-b;\x0a\x20\x20\x20\x20return\x20length(max(d,0.0))\x20+\x20min(max(d.x,d.y),0.0);\x0a}\x0a\x0aint\x20ClosestCluster(Particle\x20p0,\x20Particle\x20p1,\x20Particle\x20incoming)\x0a{\x0a\x20\x20\x20\x20//first\x20try\x20to\x20choose\x20the\x20particle\x20with\x20significantly\x20smaller\x20mass\x0a\x20\x20\x20\x20if(float(p0.mass)\x20<\x200.01*float(p1.mass)\x20||\x20float(p1.mass)\x20<\x200.01*float(p0.mass))\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20return\x20p0.mass\x20<\x20p1.mass\x20?\x200\x20:\x201;\x0a\x20\x20\x20\x20}\x0a\x0a\x20\x20\x20\x20//otherwise\x20choose\x20the\x20closest\x20one\x0a\x20\x20\x20\x20float\x20d0\x20=\x20length(p0.pos\x20-\x20incoming.pos);\x0a\x20\x20\x20\x20float\x20d1\x20=\x20length(p1.pos\x20-\x20incoming.pos);\x0a\x20\x20\x20\x20return\x20d0\x20<\x20d1\x20?\x200\x20:\x201;\x0a}\x0a\x0avoid\x20BlendParticle(inout\x20Particle\x20p,\x20in\x20Particle\x20incoming)\x0a{\x0a\x20\x20\x20\x20uint\x20newMass\x20=\x20p.mass\x20+\x20incoming.mass;\x0a\x20\x20\x20\x20vec2\x20weight\x20=\x20vec2(p.mass,\x20incoming.mass)\x20/\x20float(newMass);\x0a\x20\x20\x20\x20p.pos\x20=\x20p.pos*weight.x\x20+\x20incoming.pos*weight.y;\x0a\x20\x20\x20\x20p.vel\x20=\x20p.vel*weight.x\x20+\x20incoming.vel*weight.y;\x0a\x20\x20\x20\x20p.mass\x20=\x20newMass;\x0a}\x0a\x0avoid\x20Clusterize(inout\x20Particle\x20p0,\x20inout\x20Particle\x20p1,\x20in\x20Particle\x20incoming,\x20vec3\x20pos)\x0a{\x0a\x20\x20\x20\x20//check\x20if\x20the\x20incoming\x20particle\x20is\x20in\x20the\x20cell\x0a\x20\x20\x20\x20if(!all(equal(pos,\x20floor(incoming.pos))))\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20return;\x0a\x20\x20\x20\x20}\x0a\x0a\x20\x20\x20\x20int\x20closest\x20=\x20ClosestCluster(p0,\x20p1,\x20incoming);\x0a\x20\x20\x20\x20if(closest\x20==\x200)\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20BlendParticle(p0,\x20incoming);\x0a\x20\x20\x20\x20}\x0a\x20\x20\x20\x20else\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20BlendParticle(p1,\x20incoming);\x0a\x20\x20\x20\x20}\x0a}\x0a\x0avoid\x20SplitParticle(inout\x20Particle\x20p1,\x20inout\x20Particle\x20p2)\x0a{\x0a\x20\x20\x20\x20vec3\x20pos\x20=\x20p1.pos;\x0a\x20\x20\x20\x20uint\x20newMass\x20=\x20p1.mass;\x0a\x20\x20\x20\x20p1.mass\x20=\x20newMass/2u;\x0a\x20\x20\x20\x20p2.mass\x20=\x20newMass\x20-\x20p1.mass;\x0a\x20\x20\x20\x20vec3\x20dir\x20=\x20udir(hash23(pos));\x0a\x20\x20\x20\x20p1.pos\x20=\x20pos\x20-\x20dir*5e-3;\x0a\x20\x20\x20\x20p2.pos\x20=\x20pos\x20+\x20dir*5e-3;\x0a\x20\x20\x20\x20p2.vel\x20=\x20p1.vel;\x0a}\x0a\x0a\x0avoid\x20ApplyForce(inout\x20Particle\x20p,\x20in\x20Particle\x20incoming)\x0a{\x0a\x20\x20\x20\x20float\x20d\x20=\x20distance(p.pos,\x20incoming.pos);\x0a\x20\x20\x20\x20vec3\x20dir\x20=\x20(incoming.pos\x20-\x20p.pos)/max(d,\x201e-5);\x0a\x20\x20\x20\x20vec3\x20dvel\x20=\x20incoming.vel\x20-\x20p.vel;\x0a\x20\x20\x20\x20float\x20f\x20=\x20force_coef_a*GD(d,\x201.5);\x0a\x20\x20\x20\x20float\x20irho\x20=\x20float(incoming.mass);\x0a\x20\x20\x20\x20float\x20rho\x20=\x200.5*(p.density\x20+\x20incoming.density);\x0a\x20\x20\x20\x20float\x20pressure\x20=\x20max(rho\x20/\x20rest_density\x20-\x201.0,-0.0);\x0a\x20\x20\x20\x20float\x20SPH_F\x20=\x20f\x20*\x20\x20pressure;\x0a\x20\x20\x20\x20float\x20F\x20=\x20surface_tension*GD(d,\x20surface_tension_rad);\x0a\x20\x20\x20\x20float\x20Friction\x20=\x200.45*\x20dot(dir,\x20dvel)\x20*\x20GD(d,\x201.5);\x0a\x20\x20\x20\x20p.force\x20+=\x20force_k\x20*\x20dir\x20*\x20(F\x20+\x20SPH_F\x20+\x20Friction)\x20*\x20irho\x20/\x20rest_density;\x0a\x20\x20\x20\x20\x0a}\x0a\x0afloat\x20minv(vec3\x20a)\x0a{\x0a\x20\x20\x20\x20return\x20min(min(a.x,\x20a.y),a.z);\x0a}\x0a\x0afloat\x20maxv(vec3\x20a)\x0a{\x0a\x20\x20\x20\x20return\x20max(max(a.x,\x20a.y),a.z);\x0a}\x0a\x0afloat\x20distance2border(vec3\x20p)\x0a{\x0a\x20\x20\x20\x20vec3\x20a\x20=\x20vec3(size3d\x20-\x201.)\x20-\x20p;\x0a\x20\x20\x20\x20return\x20min(minv(p),minv(a))\x20+\x201.;\x0a}\x0a\x0avec4\x20border_grad(vec3\x20p)\x0a{\x0a\x20\x20\x20\x20const\x20float\x20dx\x20=\x200.001;\x0a\x20\x20\x20\x20const\x20vec3\x20k\x20=\x20vec3(1,-1,0);\x0a\x09return\x20\x20(k.xyyx*distance2border(p\x20+\x20k.xyy*dx)\x20+\x0a\x09\x09\x09\x20k.yyxx*distance2border(p\x20+\x20k.yyx*dx)\x20+\x0a\x09\x09\x09\x20k.yxyx*distance2border(p\x20+\x20k.yxy*dx)\x20+\x0a\x09\x09\x09\x20k.xxxx*distance2border(p\x20+\x20k.xxx*dx))/vec4(4.*dx,4.*dx,4.*dx,4.);\x0a}\x0a\x0avoid\x20IntegrateParticle(inout\x20Particle\x20p,\x20vec3\x20pos,\x20vec2\x20iR,\x20vec4\x20iM,\x20float\x20time)\x0a{\x0a\x20\x20\x20\x20p.force\x20=\x20p.force;///\x20max(0.0001,\x20float(p.mass));\x0a\x20\x20\x20\x20p.force\x20+=\x20gravity*vec3(0.4*sin(0.7*time),\x200.2*cos(0.5*time),\x20-1.0);\x20//gravity\x0a\x20\x20\x20\x20\x0a\x0a\x20\x20\x20\x20vec4\x20border\x20=\x20border_grad(p.pos);\x0a\x20\x20\x20\x20vec3\x20bound\x20=1.*normalize(border.xyz)*exp(-0.4*border.w*border.w);\x0a\x20\x20\x20\x20p.force\x20+=\x20force_boundary*bound*dt;\x0a\x20\x20\x20\x20//p.force\x20+=\x20vec2(0.0,\x200.0)*GS(distance(p.pos,\x20iR*vec2(0.2,0.5))/force_mouse_rad);\x0a\x20\x0a\x20\x20\x20\x20//if(iM.z\x20>\x200.)\x0a\x20\x20\x20\x20//{\x0a\x20\x20\x20\x20//\x20\x20\x20\x20vec3\x20dx\x20=\x20pos\x20-\x20vec3(iM.xy,\x200.0);\x0a\x20\x20\x20\x20//\x20\x20\x20\x20p.force\x20-=\x20force_mouse*dx*GS(dx/force_mouse_rad);\x0a\x20\x20\x20\x20//}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x0a\x20\x20\x20\x20p.vel\x20+=\x20p.force\x20*\x20dt;\x0a\x0a\x20\x20\x20\x20//velocity\x20limit\x0a\x20\x20\x20\x20float\x20v\x20=\x20length(p.vel)/max_velocity;\x0a\x20\x20\x20\x20p.vel\x20/=\x20(v\x20>\x201.)?v:1.;\x0a}\x0a\x0avoid\x20InitGrid(vec2\x20iR)\x0a{\x0a\x20\x20\x20\x20SCALE\x20=\x20floor(ar*pow(iR.x*iR.y,0.1666666));\x0a\x20\x20\x20\x20size3d\x20=\x20vec3(floor(iR.xy/SCALE),\x20SCALE.x*SCALE.y);\x0a}\x0a\x0avec3\x20hsv2rgb(\x20in\x20vec3\x20c\x20)\x0a{\x0a\x20\x20\x20\x20vec3\x20rgb\x20=\x20clamp(\x20abs(mod(c.x*6.0+vec3(0.0,4.0,2.0),6.0)-3.0)-1.0,\x200.0,\x201.0\x20);\x0a\x0a\x09rgb\x20=\x20rgb*rgb*(3.0-2.0*rgb);\x20//\x20cubic\x20smoothing\x09\x0a\x0a\x09return\x20c.z\x20*\x20mix(\x20vec3(1.0),\x20rgb,\x20c.y);\x0a}\x0a\x0a','responseText','.jpg','defined','destroy','setGeometry','toRadians','postProcessStages','outputTexture','fromDimensions','ClearCommand','3381548NSOChH','shaderProgram','VertexArray','STATIC_DRAW','PixelDatatype','Cartesian2','fromScale','eastNorthUpToFixedFrame','send','Math','createTexture','CubeMap','update','add','context','72126ADAjGA','multiply','createGeometry','enabled','split','primitives','uniformMap','geometry','scene','RyIpI','framebuffer','fxaa','primitiveType','loadText','3131124LQJISf','commandToExecute','preExecute','Resource','\x0auniform\x20float\x20\x20\x20\x20\x20iTime;\x0auniform\x20int\x20\x20\x20\x20\x20iFrame;\x0auniform\x20vec2\x20iResolution;\x0auniform\x20sampler2D\x20iChannel0;\x0avoid\x20AddDensity(inout\x20Particle\x20p,\x20in\x20Particle\x20incoming,\x20float\x20rad)\x0a{\x0a\x20\x20\x20\x20if(incoming.mass\x20==\x200u)\x20return;\x0a\x20\x20\x20\x20float\x20d\x20=\x20distance(p.pos,\x20incoming.pos);\x0a\x20\x20\x20\x20float\x20irho\x20=\x20float(incoming.mass);\x0a\x20\x20\x20\x20float\x20rho\x20=\x200.25*irho*GD(d,rad);\x0a\x20\x20\x20\x20p.density\x20+=\x20rho;\x0a}\x0a\x0a//compute\x20particle\x20SPH\x20densities\x0avoid\x20main()\x0a{\x0a\x20\x20\x20\x20InitGrid(iResolution.xy);\x0a\x20\x20\x20\x20vec2\x20fragCoord\x20=\x20floor(gl_FragCoord.xy);\x0a\x20\x20\x20\x20vec3\x20pos\x20=\x20dim3from2(fragCoord);\x0a\x20\x20\x20\x20\x0a\x20\x20\x20\x20Particle\x20p0,\x20p1,\x20pV;\x0a\x20\x20\x20\x20pV.pos\x20=\x20pos\x20+\x200.5;\x0a\x20\x20\x20\x20\x0a\x20\x20\x20\x20//load\x20the\x20particles\x0a\x20\x20\x20\x20vec4\x20packed\x20=\x20LOAD3D(ch0,\x20pos);\x0a\x20\x20\x20\x20unpackParticles(packed,\x20pos,\x20p0,\x20p1);\x0a\x20\x20\x20\x20\x0a\x20\x20\x20\x20range(i,\x20-2,\x202)\x20range(j,\x20-2,\x202)\x20range(k,\x20-2,\x202)\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20if(i\x20==\x200\x20&&\x20j\x20==\x200\x20&&\x20k\x20==\x200)\x20continue;\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec3\x20pos1\x20=\x20pos\x20+\x20vec3(i,\x20j,\x20k);\x0a\x20\x20\x20\x20\x20\x20\x20\x20Particle\x20p0_,\x20p1_;\x0a\x20\x20\x20\x20\x20\x20\x20\x20unpackParticles(LOAD3D(ch0,\x20pos1),\x20pos1,\x20p0_,\x20p1_);\x0a\x0a\x20\x20\x20\x20\x20\x20\x20\x20if(p0.mass\x20>\x200u)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20AddDensity(p0,\x20p0_,\x201.5);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20AddDensity(p0,\x20p1_,\x201.5);\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20if(p1.mass\x20>\x200u)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20AddDensity(p1,\x20p0_,\x201.5);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20AddDensity(p1,\x20p1_,\x201.5);\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x0a\x20\x20\x20\x20\x20\x20\x20\x20AddDensity(pV,\x20p0_,\x201.6);\x0a\x20\x20\x20\x20\x20\x20\x20\x20AddDensity(pV,\x20p1_,\x201.6);\x0a\x20\x20\x20\x20}\x0a\x0a\x20\x20\x20\x20if(p0.mass\x20>\x200u)\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20AddDensity(p0,\x20p0,\x201.5);\x0a\x20\x20\x20\x20\x20\x20\x20\x20AddDensity(p0,\x20p1,\x201.5);\x0a\x20\x20\x20\x20}\x0a\x20\x20\x20\x20if(p1.mass\x20>\x200u)\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20AddDensity(p1,\x20p0,\x201.5);\x0a\x20\x20\x20\x20\x20\x20\x20\x20AddDensity(p1,\x20p1,\x201.5);\x0a\x20\x20\x20\x20}\x0a\x20\x20\x20\x20AddDensity(pV,\x20p0,\x201.6);\x0a\x20\x20\x20\x20AddDensity(pV,\x20p1,\x201.6);\x0a\x0a\x20\x20\x20\x20out_FragColor\x20=\x20vec4(p0.density,\x20p1.density,\x20pV.density,\x200.0);\x0a}\x0a\x0a','ZAZzb','viewport','now','getFullscreenQuad','onload','VlmgL','createCommand','\x0a//\x20Fork\x20of\x20\x22PCGSPH\x203D\x22\x20by\x20michael0884.\x20https://shadertoy.com/view/mstfzS\x0a//\x202023-10-16\x2003:59:48\x0a\x0a//Particle\x20cluster\x20grid\x20smoothed\x20particle\x20hydrodynamics.\x20Now\x20in\x203D.\x0a//Compared\x20to\x202D\x20this\x20is\x20muuuch\x20trickier,\x20the\x20effective\x20resolution\x20tolerances\x20are\x20much\x20higher.\x0a//So\x20before\x20noone\x20really\x20made\x20a\x20liquid\x20in\x203d\x20that\x20looked\x20even\x20remotely\x20\x22liquid\x22\x0a//I\x20think\x20this\x20is\x20probably\x20the\x20highest\x20(visual)\x20resolution\x20fluid\x20sim\x20on\x20shadertoy\x20so\x20far.\x0a//Right\x20now\x20I\x27m\x20just\x20tracing\x20the\x20particles,\x20but\x20I\x20think\x20maybe\x20its\x20possible\x20to\x20do\x20an\x20isosurface\x20render\x20somehow?\x0a\x0a#define\x20FOV\x202.5\x0a\x0ain\x20vec3\x20vo;\x0ain\x20vec3\x20vd;\x0ain\x20vec2\x20v_st;\x0a\x0auniform\x20float\x20\x20\x20\x20\x20iTime;\x0auniform\x20int\x20\x20\x20\x20\x20iFrame;\x0auniform\x20vec2\x20iResolution;\x0auniform\x20sampler2D\x20iChannel0;\x0auniform\x20sampler2D\x20iChannel1;\x0auniform\x20sampler2D\x20iChannel2;\x0auniform\x20samplerCube\x20iChannel3;\x0a\x0amat3\x20getCamera(vec2\x20angles)\x0a{\x0a\x20\x20\x20mat3\x20theta_rot\x20=\x20mat3(1,\x20\x20\x200,\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x200,\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x200,\x20\x20cos(angles.y),\x20\x20-sin(angles.y),\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x200,\x20\x20sin(angles.y),\x20\x20cos(angles.y));\x20\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x0a\x20\x20\x20mat3\x20phi_rot\x20=\x20mat3(cos(angles.x),\x20\x20\x20sin(angles.x),\x200.,\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x09\x09\x20\x20\x20\x20\x20\x20\x20-sin(angles.x),\x20\x20\x20cos(angles.x),\x200.,\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x09\x09\x20\x20\x20\x20\x20\x20\x20\x200.,\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x200.,\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x201.);\x20\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x0a\x20\x20\x20return\x20theta_rot*phi_rot;\x0a}\x0a\x0avec3\x20getRay(vec2\x20angles,\x20vec2\x20pos)\x0a{\x0a\x20\x20\x20\x20mat3\x20camera\x20=\x20getCamera(angles);\x0a\x20\x20\x20\x20return\x20normalize(transpose(camera)*vec3(FOV*pos.x,\x201.,\x20FOV*pos.y));\x0a}\x0a\x0a\x0a#define\x20MAX_DIST\x201e5\x0a\x0astruct\x20Ray\x20\x0a{\x0a\x20\x20\x20\x20vec3\x20ro;\x0a\x20\x20\x20\x20vec3\x20rd;\x0a\x20\x20\x20\x20float\x20td;\x0a\x20\x20\x20\x20vec3\x20normal;\x0a\x20\x20\x20\x20vec3\x20color;\x0a};\x0a\x0avoid\x20iSphere(inout\x20Ray\x20ray,\x20vec4\x20sphere,\x20vec3\x20color)\x0a{\x0a\x20\x20\x20\x20vec3\x20ro\x20=\x20ray.ro\x20-\x20sphere.xyz;\x0a\x20\x20\x20\x20float\x20b\x20=\x20dot(ro,\x20ray.rd);\x0a\x20\x20\x20\x20float\x20c\x20=\x20dot(ro,\x20ro)\x20-\x20sphere.w*sphere.w;\x0a\x20\x20\x20\x20float\x20h\x20=\x20b*b\x20-\x20c;\x0a\x20\x20\x20\x20if\x20(h\x20>\x200.)\x20\x0a\x20\x20\x20\x20{\x0a\x09\x20\x20\x20\x20h\x20=\x20sqrt(h);\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20d1\x20=\x20-b-h;\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20d2\x20=\x20-b+h;\x0a\x20\x20\x20\x20\x20\x20\x20\x20if\x20(d1\x20>=\x200.0\x20&&\x20d1\x20<=\x20ray.td)\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20ray.normal\x20=\x20normalize(ro\x20+\x20ray.rd*d1);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20ray.color\x20=\x20color;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20ray.td\x20=\x20d1;\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x20else\x20if\x20(d2\x20>=\x200.0\x20&&\x20d2\x20<=\x20ray.td)\x20{\x20\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20ray.normal\x20=\x20normalize(ro\x20+\x20ray.rd*d2);\x20\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20ray.color\x20=\x20color;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20ray.td\x20=\x20d2;\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20}\x0a}\x0a\x0avec2\x20iBox(\x20in\x20vec3\x20ro,\x20in\x20vec3\x20rd,\x20in\x20vec3\x20boxSize\x20)\x20\x0a{\x0a\x20\x20\x20\x20vec3\x20m\x20=\x20sign(rd)/max(abs(rd),\x201e-8);\x0a\x20\x20\x20\x20vec3\x20n\x20=\x20m*ro;\x0a\x20\x20\x20\x20vec3\x20k\x20=\x20abs(m)*boxSize;\x0a\x09\x0a\x20\x20\x20\x20vec3\x20t1\x20=\x20-n\x20-\x20k;\x0a\x20\x20\x20\x20vec3\x20t2\x20=\x20-n\x20+\x20k;\x0a\x0a\x09float\x20tN\x20=\x20max(\x20max(\x20t1.x,\x20t1.y\x20),\x20t1.z\x20);\x0a\x09float\x20tF\x20=\x20min(\x20min(\x20t2.x,\x20t2.y\x20),\x20t2.z\x20);\x0a\x09\x0a\x20\x20\x20\x20if\x20(tN\x20>\x20tF\x20||\x20tF\x20<=\x200.)\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20return\x20vec2(MAX_DIST);\x0a\x20\x20\x20\x20}\x20else\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20return\x20vec2(tN,\x20tF);\x0a\x20\x20\x20\x20}\x0a}\x0a\x0avec2\x20hitBox(vec3\x20orig,\x20vec3\x20dir)\x20{\x0a\x20\x20\x20const\x20vec3\x20box_min\x20=\x20vec3(-0.5);\x0a\x20\x20\x20const\x20vec3\x20box_max\x20=\x20vec3(0.5);\x0a\x20\x20\x20vec3\x20inv_dir\x20=\x201.0\x20/\x20dir;\x0a\x20\x20\x20vec3\x20tmin_tmp\x20=\x20(box_min\x20-\x20orig)\x20*\x20inv_dir;\x0a\x20\x20\x20vec3\x20tmax_tmp\x20=\x20(box_max\x20-\x20orig)\x20*\x20inv_dir;\x0a\x20\x20\x20vec3\x20tmin\x20=\x20min(tmin_tmp,\x20tmax_tmp);\x0a\x20\x20\x20vec3\x20tmax\x20=\x20max(tmin_tmp,\x20tmax_tmp);\x0a\x20\x20\x20float\x20t0\x20=\x20max(tmin.x,\x20max(tmin.y,\x20tmin.z));\x0a\x20\x20\x20float\x20t1\x20=\x20min(tmax.x,\x20min(tmax.y,\x20tmax.z));\x0a\x20\x20\x20return\x20vec2(t0,\x20t1);\x0a}\x0a\x0a#define\x20radius\x200.75\x0a#define\x20zoom\x200.25\x0a\x0avoid\x20TraceCell(inout\x20Ray\x20ray,\x20vec3\x20p)\x0a{\x0a\x20\x20\x20\x20//load\x20the\x20particles\x20\x0a\x20\x20\x20\x20vec4\x20packed\x20=\x20LOAD3D(ch0,\x20p);\x0a\x20\x20\x20\x20Particle\x20p0,\x20p1;\x0a\x20\x20\x20\x20unpackParticles(packed,\x20p,\x20p0,\x20p1);\x0a\x0a\x20\x20\x20\x20if(p0.mass\x20>\x200u)\x20iSphere(ray,\x20vec4(p0.pos,\x201.0),\x20vec3(0.420,0.302,0.996)\x20*\x20length(p0.vel));\x0a\x20\x20\x20\x20if(p1.mass\x20>\x200u)\x20iSphere(ray,\x20vec4(p1.pos,\x201.0),\x20vec3(0.420,0.302,0.996)\x20*\x20length(p0.vel));\x0a}\x0a\x0avoid\x20TraceCells(inout\x20Ray\x20ray,\x20vec3\x20p)\x0a{\x0a\x20\x20\x20\x20vec3\x20p0\x20=\x20floor(p);\x0a\x20\x20\x20\x20vec4\x20rho\x20=\x20LOAD3D(ch1,\x20p);\x0a\x20\x20\x20\x20if(rho.z\x20<\x201e-5)\x20return;\x0a\x20\x20\x20\x20range(i,\x20-1,\x201)\x20range(j,\x20-1,\x201)\x20range(k,\x20-1,\x201)\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20//load\x20the\x20particles\x20\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec3\x20p1\x20=\x20p0\x20+\x20vec3(i,\x20j,\x20k);\x0a\x20\x20\x20\x20\x20\x20\x20\x20TraceCell(ray,\x20p1);\x0a\x20\x20\x20\x20}\x0a}\x0a\x0a\x0afloat\x20Density(vec3\x20p)\x0a{\x0a\x20\x20\x20\x20return\x20trilinear(ch1,\x20p).z;\x0a}\x0a\x0afloat\x20Shadow(vec3\x20p)\x0a{\x0a\x20\x20\x20\x20float\x20optical_density\x20=\x20trilinear(ch2,\x20p).x;\x0a\x20\x20\x20\x20return\x20exp(-optical_density)+0.05;\x0a}\x0a\x0avec4\x20calcNormal(vec3\x20p,\x20float\x20dx)\x20{\x0a\x09const\x20vec3\x20k\x20=\x20vec3(1,-1,0);\x0a\x09return\x20\x20\x20(k.xyyx*Density(p\x20+\x20k.xyy*dx)\x20+\x0a\x09\x09\x09\x20k.yyxx*Density(p\x20+\x20k.yyx*dx)\x20+\x0a\x09\x09\x09\x20k.yxyx*Density(p\x20+\x20k.yxy*dx)\x20+\x0a\x09\x09\x09\x20k.xxxx*Density(p\x20+\x20k.xxx*dx))/vec4(4.*dx,4.*dx,4.*dx,4.);\x0a}\x0a\x0afloat\x20TraceDensity(vec3\x20ro,\x20vec3\x20rd)\x0a{\x0a\x20\x20\x20\x20const\x20float\x20step_size\x20=\x201.0;\x0a\x20\x20\x20\x20const\x20int\x20step_count\x20=\x20100;\x0a\x20\x20\x20\x20float\x20dens\x20=\x200.0;\x0a\x20\x20\x20\x20float\x20td\x20=\x200.0;\x0a\x20\x20\x20\x20for(int\x20i\x20=\x200;\x20i\x20<\x20step_count;\x20i++)\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec3\x20p\x20=\x20ro\x20+\x20rd\x20*\x20td;\x0a\x20\x20\x20\x20\x20\x20\x20\x20if(!all(lessThanEqual(p,\x20size3d))\x20||\x20!all(greaterThanEqual(p,\x20vec3(0.0))))\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20break;\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20d\x20=\x20Density(p);\x0a\x20\x20\x20\x20\x20\x20\x20\x20dens\x20+=\x20d\x20*\x20step_size;\x0a\x20\x20\x20\x20\x20\x20\x20\x20td\x20+=\x20step_size;\x0a\x20\x20\x20\x20}\x0a\x20\x20\x20\x20return\x20dens;\x0a}\x0a\x0a\x0avoid\x20main()\x0a{\x20\x20\x20\x20\x0a\x20\x20\x20\x20InitGrid(iResolution.xy);\x0a\x20\x20\x20\x20\x0a\x20\x20\x20\x20vec2\x20uv\x20=\x20(gl_FragCoord.xy\x20-\x200.5*R)/max(R.x,\x20R.y);\x0a\x0a\x20\x20\x20\x20vec2\x20angles\x20=\x20vec2(2.*PI,\x20PI)*(iMouse.xy/iResolution.xy\x20-\x200.5);\x0a\x0a\x0a\x20\x20\x20\x20if(iMouse.z\x20<=\x200.)\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20angles\x20=\x20vec2(0.,\x20\x20-PI/2.);\x0a\x20\x20\x20\x20}\x0a\x20\x20\x20\x20vec3\x20rd\x20=\x20getRay(angles,\x20uv);\x0a\x20\x20\x20\x20vec3\x20center_rd\x20=\x20getRay(angles,\x20vec2(0.));\x0a\x20\x0a\x20\x20\x20\x20float\x20d\x20=\x20sqrt(dot(vec3(size3d),\x20vec3(size3d)))*0.5;\x0a\x20\x20\x20\x20vec3\x20ro\x20=\x20vec3(size3d)*vec3(0.5,\x200.5,\x200.5)\x20-\x20center_rd*d*0.5;\x0a\x20\x20\x20\x20\x0a\x20\x20\x20\x20\x0a\x0a\x20\x20\x20\x20vec2\x20tdBox\x20=\x20iBox(ro\x20-\x20vec3(size3d)*0.5,\x20rd,\x200.5*vec3(size3d));\x0a\x20\x20\x20\x20out_FragColor\x20=\x20texture(iChannel3,\x20\x20rd.yzx);\x0a\x20\x20\x20\x20out_FragColor\x20=\x20vec4(0.);\x0a\x20\x20\x20\x20if(tdBox.x\x20<\x20MAX_DIST)\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20td\x20=\x20max(tdBox.x,\x200.0);\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20step_size\x20=\x202.5;\x0a\x20\x20\x20\x20\x20\x20\x20\x20const\x20int\x20step_count\x20=\x20100;\x0a\x20\x20\x20\x20\x20\x20\x20\x20Ray\x20ray;\x0a\x20\x20\x20\x20\x20\x20\x20\x20ray.ro\x20=\x20ro;\x0a\x20\x20\x20\x20\x20\x20\x20\x20ray.rd\x20=\x20rd;\x0a\x20\x20\x20\x20\x20\x20\x20\x20ray.td\x20=\x20tdBox.y;\x0a\x0a\x20\x20\x20\x20\x20\x20\x20\x20for(int\x20i\x20=\x200;\x20i\x20<\x20step_count;\x20i++)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vec3\x20p\x20=\x20ro\x20+\x20rd*td;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20TraceCells(ray,\x20p);\x0a\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20td\x20+=\x20step_size;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20if(td\x20>\x20tdBox.y\x20||\x20ray.td\x20<\x20tdBox.y)\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20break;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x0a\x20\x20\x20\x20\x20\x20\x20\x20if(ray.td\x20<\x20tdBox.y)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vec3\x20p0\x20=\x20ray.ro\x20+\x20ray.rd*ray.td;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vec3\x20normal\x20=\x20normalize(calcNormal(p0,\x200.5).xyz);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20normal\x20=\x20-normalize(mix(normal,\x20ray.normal,\x200.0));\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vec3\x20albedo\x20=\x20vec3(0.220,0.349,1.000);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20float\x20LdotN\x20=\x20dot(normal,\x20light_dir);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20float\x20shadow\x20=\x20Shadow(p0);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vec3\x20refl_d\x20=\x20reflect(ray.rd,\x20normal);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vec3\x20refr_d\x20=\x20refract(ray.rd,\x20normal,\x201.0/1.33);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20float\x20liquid_density\x20=\x20TraceDensity(p0,\x20refr_d);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vec3\x20liquid_color\x20=\x20exp(-0.1*liquid_density*vec3(0.953,0.353,0.247));\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vec3\x20refr_color\x20=\x20texture(iChannel3,\x20\x20refr_d.yzx).xyz\x20*\x20liquid_color;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vec3\x20refl\x20=\x20texture(iChannel3,\x20\x20refl_d.yzx).xyz;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20float\x20K\x20=\x201.\x20-\x20pow(max(dot(normal,refl_d),0.),\x202.);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20K\x20=\x20mix(0.0,\x20K,\x200.5);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20out_FragColor.xyz\x20=\x20(0.25*shadow\x20+\x201.5)*refr_color*(1.0\x20-\x20K)\x20+\x200.*ray.color\x20+\x200.75*shadow*refl*K;\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20}\x0a}\x0a','vertexShaderSource','GeometryAttributes','GEknl','Appearance','_width','commandType','Matrix4','32pBrZvG','2|8|16|15|12|10|11|7|13|14|9|5|3|6|1|0|4','TpbPe','fromCache','then','GeometryAttribute','IDENTITY','fromGeometry','bNtyc','arrayBufferView','_viewer','40600186nniCyO','fromRotationY','Cartesian3','445JzcRTm','ShaderSource','globe','\x0auniform\x20float\x20\x20\x20\x20\x20iTime;\x0auniform\x20int\x20\x20\x20\x20\x20iFrame;\x0auniform\x20vec2\x20iResolution;\x0auniform\x20sampler2D\x20iChannel1;\x0afloat\x20Density(vec3\x20p)\x0a{\x0a\x20\x20\x20\x20return\x20trilinear(ch1,\x20p).z;\x0a}\x0a\x0avec4\x20calcNormal(vec3\x20p,\x20float\x20dx)\x20{\x0a\x09const\x20vec3\x20k\x20=\x20vec3(1,-1,0);\x0a\x09return\x20\x20\x20(k.xyyx*Density(p\x20+\x20k.xyy*dx)\x20+\x0a\x09\x09\x09\x20k.yyxx*Density(p\x20+\x20k.yyx*dx)\x20+\x0a\x09\x09\x09\x20k.yxyx*Density(p\x20+\x20k.yxy*dx)\x20+\x0a\x09\x09\x09\x20k.xxxx*Density(p\x20+\x20k.xxx*dx))/vec4(4.*dx,4.*dx,4.*dx,4.);\x0a}\x0a\x0a//compute\x20shadows\x0avoid\x20main()\x0a{\x0a\x20\x20\x20\x20InitGrid(iResolution.xy);\x0a\x20\x20\x20\x20vec2\x20fragCoord\x20=\x20floor(gl_FragCoord.xy);\x0a\x20\x20\x20\x20vec3\x20pos\x20=\x20dim3from2(fragCoord);\x0a\x20\x20\x20\x20\x0a\x20\x20\x20\x20//ray\x20march\x20in\x20the\x20-light_dir\x20direction\x0a\x20\x20\x20\x20const\x20float\x20step_size\x20=\x201.0;\x0a\x20\x20\x20\x20const\x20int\x20step_count\x20=\x20100;\x0a\x20\x20\x20\x20float\x20td\x20=\x200.0;\x0a\x20\x20\x20\x20vec3\x20rd\x20=\x20light_dir;\x0a\x20\x20\x20\x20float\x20optical_density\x20=\x200.0;\x0a\x20\x20\x20\x20vec3\x20normal\x20=\x20normalize(calcNormal(pos,\x200.5).xyz);\x0a\x20\x20\x20\x20pos\x20+=\x20-normal*0.5;\x0a\x20\x20\x20\x20for(int\x20i\x20=\x200;\x20i\x20<\x20step_count;\x20i++)\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec3\x20p\x20=\x20pos\x20+\x20rd\x20*\x20td;\x0a\x20\x20\x20\x20\x20\x20\x20\x20if(!all(lessThanEqual(p,\x20size3d))\x20||\x20!all(greaterThanEqual(p,\x20vec3(0.0))))\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20break;\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20d\x20=\x20Density(p);\x0a\x20\x20\x20\x20\x20\x20\x20\x20optical_density\x20+=\x20d\x20*\x20step_size;\x0a\x20\x20\x20\x20\x20\x20\x20\x20td\x20+=\x20step_size;\x0a\x20\x20\x20\x20}\x0a\x0a\x20\x20\x20\x20out_FragColor\x20=\x20vec4(0.2*optical_density);\x0a}\x0a','Color','385662bVDGAO','5kuTgru'];a0_0x410b=function(){return _0x4e013a;};return a0_0x410b();}